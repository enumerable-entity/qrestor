app:
  domain: https://www.qrestor.com
  auth:
    jwt:
      secret: ${AUTH_SERVICE_TOKEN_SECRET:qrestor_secret}
      expiration: ${AUTH_SERVICE_TOKEN_EXPIRATION:#{1000 * 60 * 60 *24 * 7}}
      issuer: ${AUTH_SERVICE_TOKEN_ISSUER:${spring.application.name}}
management:
  metrics:
    tags:
      application: ${spring.application.name}
  endpoints:
    web:
      exposure:
        include: "*"
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://zipkin:9411/api/v2/spans
eureka:
  client:
    enabled: false
#PostgreSQL
spring:
  datasource:
    url: ${AUTH_SERVICE_CONN_STRING:jdbc:postgresql://postgres:5432/${spring.application.name}}
    username: ${AUTH_SERVICE_DB_USER:${spring.application.name}}
    password: ${AUTH_SERVICE_DB_PASSWORD:${spring.application.name}}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        show_sql: true
        use_sql_comments: true
        jdbc:
          lob:
            non_contextual_creation: true
  kafka:
    bootstrap-servers: kafka:9092
  liquibase:
    enabled: true
    change-log: classpath:db/changelog/changelog-master.xml
  data:
    redis:
      host: ${REDIS_HOST:redis}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:${spring.application.name}}
      database: ${REDIS_DB:0}
      timeout: 10000