#PostgreSQL
app:
  domain: http://qrestor.api.internal:8097
  auth:
    jwt:
      secret: ${AUTH_SERVICE_TOKEN_SECRET:qrestor_secret}
      expiration: ${AUTH_SERVICE_TOKEN_EXPIRATION:#{1000 * 60 * 60 *24 * 7}}
      issuer: ${AUTH_SERVICE_TOKEN_ISSUER:${spring.application.name}}
spring:
  banner:
    location: banner.txt
  datasource:
    url: ${AUTH_SERVICE_CONN_STRING:jdbc:postgresql://localhost:5432/${spring.application.name}}
    username: ${AUTH_SERVICE_DB_USER:${spring.application.name}}
    password: ${AUTH_SERVICE_DB_PASSWORD:${spring.application.name}}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        show_sql: true
        jdbc:
          lob:
            non_contextual_creation: true
  liquibase:
    enabled: true
    change-log: classpath:db/changelog/changelog-master.xml
  cache:
    type: redis
    redis:
      time-to-live: 200000
  data:
    redis:
        repositories:
          enabled: false
        host: ${REDIS_HOST:localhost}
        port: ${REDIS_PORT:6379}
        password: ${REDIS_PASSWORD:qrestor123}
        database: ${REDIS_DB:0}
        timeout: 10000
  threads:
    virtual:
      enabled: true
logging:
  pattern:
    level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'
  level:
    springframework:
      security: TRACE
      cache: TRACE
      data: TRACE
      web: TRACE


eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
  instance:
    hostname: localhost
management:
  metrics:
    tags:
      application: ${spring.application.name}
  endpoints:
    web:
      exposure:
        include: "*"
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans