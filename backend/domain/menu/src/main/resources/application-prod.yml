app:
  minio:
    server:
      url: ${MIN_IO_HOST:https://minio:9000}
      access-key: ${MIN_IO_ACCESS_KEY:qrestor123}
      secret-key: ${MIN_IO_SECRET_KEY:qrestor123}
spring:
  datasource:
    url: ${AUTH_SERVICE_CONN_STRING:jdbc:postgresql://localhost:5432/${spring.application.name}}
    username: ${AUTH_SERVICE_DB_USER:${spring.application.name}}
    password: ${AUTH_SERVICE_DB_PASSWORD:${spring.application.name}}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        show_sql: true
        use_sql_comments: true
        jdbc:
          lob:
            non_contextual_creation: true

  liquibase:
    enabled: true
    change-log: classpath:db/changelog/changelog-master.xml
  data:
    mongodb:
      uri: ${MONGODB_CONN_STRING:mongodb://localhost:27017/${spring.application.name}}
      database: ${MONGODB_DB_NAME:${spring.application.name}}
      username: ${MONGODB_DB_USER:${spring.application.name}}
      password: ${MONGODB_DB_PASSWORD:${spring.application.name}}


logging:
  level:
    org:
      hibernate:
        SQL: DEBUG
        cache: DEBUG
        stat: DEBUG
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
  instance:
    hostname: localhost
management:
  metrics:
    tags:
      application: ${spring.application.name}
  endpoints:
    web:
      exposure:
        include: "*"
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans
